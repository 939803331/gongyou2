/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.8
 * Generated at: 2018-06-04 13:45:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.site.web.tabler;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.apache.commons.lang3.ArrayUtils;
import org.apache.commons.lang3.StringUtils;
import org.apache.commons.lang3.StringEscapeUtils;
import jease.cms.domain.Content;
import jease.cms.domain.News;
import jease.cms.domain.Topic;
import jease.cms.domain.Folder;
import jease.site.Navigations;
import java.util.Date;
import java.util.Random;

public final class Page_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {


	final static String currentYear = String.format("%tY ", new java.util.Date());

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/site/service/Copyright.jsp", Long.valueOf(1528116264000L));
    _jspx_dependants.put("/site/service/Designswitch.jsp", Long.valueOf(1527964028000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("jease.site.Navigations");
    _jspx_imports_classes.add("jease.cms.domain.Content");
    _jspx_imports_classes.add("java.util.Date");
    _jspx_imports_classes.add("jease.cms.domain.News");
    _jspx_imports_classes.add("jease.cms.domain.Topic");
    _jspx_imports_classes.add("org.apache.commons.lang3.ArrayUtils");
    _jspx_imports_classes.add("jease.cms.domain.Folder");
    _jspx_imports_classes.add("java.util.Random");
    _jspx_imports_classes.add("org.apache.commons.lang3.StringEscapeUtils");
    _jspx_imports_classes.add("org.apache.commons.lang3.StringUtils");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;


    Content content = (Content) request.getAttribute("Node");
    Content root = (Content) request.getAttribute("Root");
    String pname = content.getPath();

    request.setAttribute("pname", pname);


      out.write("<!doctype html>\n");
      out.write("<html lang=\"en\" dir=\"ltr\">\n");
      out.write("    <head>\n");
      out.write("        <meta charset=\"UTF-8\">\n");
      out.write("        <meta name=\"viewport\" content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\">\n");
      out.write("        <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n");
      out.write("        <meta http-equiv=\"Content-Language\" content=\"en\" />\n");
      out.write("        <meta name=\"msapplication-TileColor\" content=\"#2d89ef\">\n");
      out.write("        <meta name=\"theme-color\" content=\"#4188c9\">\n");
      out.write("        <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black-translucent\"/>\n");
      out.write("        <meta name=\"apple-mobile-web-app-capable\" content=\"yes\">\n");
      out.write("        <meta name=\"mobile-web-app-capable\" content=\"yes\">\n");
      out.write("        <meta name=\"HandheldFriendly\" content=\"True\">\n");
      out.write("        <meta name=\"MobileOptimized\" content=\"320\">\n");
      out.write("        <link rel=\"icon\" href=\"");
      out.print(request.getContextPath());
      out.write("/site/web/tabler/assets/favicon.ico\" type=\"image/x-icon\"/>\n");
      out.write("        <link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"");
      out.print(request.getContextPath());
      out.write("/site/web/tabler/assets/favicon.ico\" />\n");
      out.write("        <title>");
      out.print(Navigations.getPageTitle(content));
      out.write("</title>\n");
      out.write("        <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\n");
      out.write("        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,300i,400,400i,500,500i,600,600i,700,700i&amp;subset=latin-ext\">\n");
      out.write("        <script src=\"");
      out.print(request.getContextPath());
      out.write("/site/web/tabler/assets/js/require.min.js\"></script>\n");
      out.write("        <script>\n");
      out.write("            requirejs.config({\n");
      out.write("                baseUrl: '.'\n");
      out.write("            });\n");
      out.write("        </script>\n");
      out.write("        <!-- Dashboard Core -->\n");
      out.write("        <link href=\"");
      out.print(request.getContextPath());
      out.write("/site/web/tabler/assets/css/dashboard.css\" rel=\"stylesheet\" />\n");
      out.write("        <script src=\"");
      out.print(request.getContextPath());
      out.write("/site/web/tabler/assets/js/dashboard.js\"></script>\n");
      out.write("    </head>\n");
      out.write("    <body class=\"\">\n");
      out.write("        <div class=\"page\">\n");
      out.write("            <div class=\"page-main\">\n");
      out.write("                <div class=\"header py-4\">\n");
      out.write("                    <div class=\"container\">\n");
      out.write("                        <div class=\"d-flex\">\n");
      out.write("                            <a class=\"header-brand\" href=\"");
      out.print(request.getContextPath());
      out.write("/\">\n");
      out.write("                                <img src=\"");
      out.print(request.getContextPath());
      out.write("/site/web/tabler/assets/images/logo.png\" class=\"header-brand-img\" alt=\"jease logo\">\n");
      out.write("                            </a>\n");
      out.write("                            <div class=\"d-flex order-lg-2 ml-auto\">\n");
      out.write("                                <div class=\"nav-item d-none d-md-flex\">\n");
      out.write("                                    <a href=\"https://github.com/jease/jease\" class=\"btn btn-sm btn-outline-primary\" target=\"_blank\">Source code</a>\n");
      out.write("                                </div>\n");
      out.write("                                <div class=\"dropdown d-none d-md-flex\">\n");
      out.write("                                    <a class=\"nav-link icon\" data-toggle=\"dropdown\">\n");
      out.write("                                        <i class=\"fe fe-bell\"></i>\n");
      out.write("                                        <span class=\"nav-unread\"></span>\n");
      out.write("                                    </a>\n");
      out.write("                                    <div class=\"dropdown-menu dropdown-menu-right dropdown-menu-arrow\">\n");
      out.write("                                        ");

                                            News[] news = Navigations.getNews((Content) content.getParent());
                                            if (ArrayUtils.isNotEmpty(news)) {
                                                for (News item : news) {
                                        
      out.write("<a href=\"#\" class=\"dropdown-item d-flex\">\n");
      out.write("                                            <div>\n");
      out.write("                                                <strong>");
      out.print(item.getTitle());
      out.write("</strong>                       \n");
      out.write("                                                <div class=\"small text-muted\">");
 if (item.getDate() != null) {
      out.print(String.format("%tF", item.getDate()));
} 
      out.write("</div>\n");
      out.write("                                            </div>\n");
      out.write("                                        </a>\n");
      out.write("                                        ");
 } 
 }
      out.write("</div>\n");
      out.write("                                </div>\n");
      out.write("                            </div>\n");
      out.write("                            <a href=\"#\" class=\"header-toggler d-lg-none ml-3 ml-lg-0\" data-toggle=\"collapse\" data-target=\"#headerMenuCollapse\">\n");
      out.write("                                <span class=\"header-toggler-icon\"></span>\n");
      out.write("                            </a>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("                <div class=\"header collapse d-lg-flex p-0\" id=\"headerMenuCollapse\">\n");
      out.write("                    <div class=\"container\">\n");
      out.write("                        <div class=\"row align-items-center\">\n");
      out.write("                            <div class=\"col-lg-3 ml-auto\">\n");
      out.write("                                <form action=\"");
      out.print(request.getContextPath());
      out.print(root.getPath());
      out.write("\" method=\"get\" class=\"input-icon my-3 my-lg-0\">\n");
      out.write("                                    <input type=\"search\" name=\"query\" ");
 if (request.getParameter("query") != null) {
      out.write("value=\"");
      out.print( StringEscapeUtils.escapeHtml4(request.getParameter("query")));
      out.write('"');
 } else { 
      out.write("value=\"Enter your search...\" onfocus=\"this.value = '';\"");
 } 
      out.write("  class=\"form-control header-search\" placeholder=\"Search&hellip;\" tabindex=\"1\">\n");
      out.write("                                    <input type=\"hidden\" name=\"page\" value=\"/site/service/Search.jsp\" />\n");
      out.write("                                    <div class=\"input-icon-addon\">\n");
      out.write("                                        <i class=\"fe fe-search\"></i>\n");
      out.write("                                    </div>\n");
      out.write("                                </form>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"col-lg order-lg-first\">\n");
      out.write("                                <ul class=\"nav nav-tabs border-0 flex-column flex-lg-row\">\n");
      out.write("                                    ");
 for (Content tab : Navigations.getTabs(root)) {
      out.write("<li ");
      out.print(content.getPath().startsWith(tab.getPath()) ? " class=\"current\"" : "class=\"nav-item\"");
      out.write(">\n");
      out.write("                                        <a class=\"nav-link\" href=\"");
      out.print(request.getContextPath());
      out.print(tab.getPath());
      out.write('"');
      out.write('>');
      out.print(tab.getTitle());
      out.write("</a>\n");
      out.write("                                    </li>\n");
      out.write("                                    ");
 }
      out.write("</ul>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("                <div class=\"my-3 my-md-5\">\n");
      out.write("                    <div class=\"container\">\n");
      out.write("                        <div class=\"page-header\">\n");
      out.write("                            <h1 class=\"page-title\">\n");
      out.write("                                ");
      out.print(((Content) content.getParent()).getTitle());
      out.write("</h1>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"row\">\n");
      out.write("                            <div class=\"col-lg-3\">\n");
      out.write("                                <div class=\"card\">\n");
      out.write("                                    <div class=\"card-header\">\n");
      out.write("                                        <h3 class=\"card-title\">Navigation</h3>\n");
      out.write("                                    </div>\n");
      out.write("                                    <div class=\"card-body\">\n");
      out.write("                                        <div class=\"list-group list-group-transparent mb-0\">\n");
      out.write("                                            ");
 for (Content item : Navigations.getItems((Content) content.getParent())) { 
 if (item instanceof Topic) {
      out.write("<span  class=\"list-group-item list-group-item-action active\"><span class=\"icon mr-3\"><i class=\"fe fe-flag\"></i></span>");
      out.print(item.getTitle());
      out.write("</span>\n");
      out.write("                                            ");
 } else {
      out.write("<a class=\"list-group-item list-group-item-action\" href=\"");
      out.print(request.getContextPath());
      out.print(item.getPath());
      out.write('"');
      out.write('>');
      out.print(item.getTitle());
      out.write("</a>\n");
      out.write("                                            ");
 } 
 } 
      out.write("</div>\n");
      out.write("                                    </div>\n");
      out.write("                                </div><!--end card-->\n");
      out.write("                                ");

                                    String[] color = new String[]{"red", "blue", "yellow", "orange", "green","teal","purple"};
                                    if (ArrayUtils.isNotEmpty(news)) {
                                        for (News item : news) {
                                
      out.write("<div class=\"card\">\n");
      out.write("                                    <div class=\"card-status bg-");
      out.print(color[new Random().nextInt(7)]);
      out.write("\"></div>\n");
      out.write("                                    <div class=\"card-body\">\n");
      out.write("                                        <h4 class=\"mb-3\">");
      out.print(item.getTitle());
      out.write("</h4>\n");
      out.write("                                        <div class=\"row\">\n");
      out.write("                                            <div class=\"col-auto\">\n");
      out.write("                                                ");
 if (item.getDate() != null) {
      out.write("<div class=\"text-muted-dark\"><i class=\"mdi mdi-calendar mr-1 text-muted w-4 text-center\"></i> ");
      out.print(String.format("%tF", item.getDate()));
      out.write("</div>\n");
      out.write("                                                ");
} 
      out.write("</div>\n");
      out.write("                                            <div class=\"col-auto\">\n");
      out.write("                                                <div class=\"text-muted-dark\"><i class=\"mdi mdi-map-marker mr-1 text-muted w-4 text-center\"></i> ");
 if (StringUtils.isBlank(item.getTeaser())) {
      out.print(item.getStory());
 } else {
      out.write('<');
      out.write('p');
      out.write('>');
      out.print(item.getTeaser());
      out.write("<br />\n");
      out.write("                                                        <a href=\"");
      out.print(request.getContextPath());
      out.print(item.getPath());
      out.write("?print\">More...</a>\n");
      out.write("                                                    </p>\n");
      out.write("                                                    ");
 } 
      out.write("</div>\n");
      out.write("                                            </div>\n");
      out.write("                                        </div>\n");
      out.write("                                    </div>\n");
      out.write("                                </div>\n");
      out.write("                                ");
 } 
 }
      out.write("</div>\n");
      out.write("                            <div class=\"col-lg-9\">\n");
      out.write("                                <div class=\"card\">\n");
      out.write("                                    <div class=\"card-body\">\n");
      out.write("                                        <p id=\"breadcrumb\">\n");
      out.write("                                            ");
 for (Content parent : Navigations.getBreadcrumb(root, content)) {
      out.write("\n");
      out.write("                                            &raquo; <a href=\"");
      out.print(request.getContextPath());
      out.print(parent.getPath());
      out.write('"');
      out.write('>');
      out.print(parent.getTitle());
      out.write("</a>\n");
      out.write("                                            ");
 } 
      out.write("</p>\n");
      out.write("                                        ");
 pageContext.include((String) request.getAttribute("Page.Template")); 
      out.write("<div style=\"clear: both\"></div>\n");
      out.write("                                        <p id=\"editorial\">\n");
      out.write("                                            ");
 Content latestChange = Navigations.getLatestContribution(content);
      out.write("\n");
      out.write("                                            Last modified on ");
      out.print(String.format("%tF", latestChange.getLastModified()));
 if (latestChange.getEditor() != null) {
      out.write("\n");
      out.write("                                            by ");
      out.print(latestChange.getEditor().getName());
 }
      out.write("</p>\n");
      out.write("                                    </div>\n");
      out.write("                                </div>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("                <div class=\"footer\">\n");
      out.write("                    <div class=\"container\">\n");
      out.write("                        <div class=\"row\">\n");
      out.write("                            <div class=\"col-lg-8\">\n");
      out.write("                                <div class=\"row\">\n");
      out.write("                                    Choose template : <span ></span>");
 if (!jease.Registry.getParameter(jease.Names.JEASE_SITE_DESIGN,"").startsWith("/")) { 
      out.write("<div class=\"btn-list text-center\">\n");
      out.write("Design\n");
 for (String design : new String[] { "bright", "cool", "loop", "photo", "robot", "simple" ,"tabler"}) { 
      out.write("<a class=\"btn btn-secondary btn-sm\" href=\"?design=");
      out.print(design);
      out.write('"');
      out.write('>');
      out.print(design);
      out.write("</a>\n");
 } 
      out.write("</div>\n");
      out.write("\n");
 } 
      out.write("</div>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"col-lg-4 mt-4 mt-lg-0\">\n");
      out.write("                                Jease means \"Java with Ease\", so Jease promises to keep simple things simple and the hard things (j)easy.\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("                <footer class=\"footer\">\n");
      out.write("                    <div class=\"container\">\n");
      out.write("                        <div class=\"row align-items-center flex-row-reverse\">\n");
      out.write("                            <div class=\"col-auto ml-lg-auto\">\n");
      out.write("                                <div class=\"row align-items-center\">\n");
      out.write("                                    <div class=\"col-auto\">\n");
      out.write("                                        <ul class=\"list-inline list-inline-dots mb-0\">\n");
      out.write("                                            <li class=\"list-inline-item\"><a href=\"");
      out.print(request.getContextPath());
      out.write("/documentation/\">Documentation</a></li>\n");
      out.write("                                            <li class=\"list-inline-item\"><a href=\"");
      out.print(request.getContextPath());
      out.write("/support/\">FAQ</a></li>\n");
      out.write("                                            <li class=\"list-inline-item\"><a href=\"");
      out.print(request.getContextPath());
      out.write("/examples/sitemap.jsp\">SiteMap</a></li>\n");
      out.write("                                            <li class=\"list-inline-item\"><a href=\"");
      out.print(request.getContextPath());
      out.write("/features\">Features</a></li>\n");
      out.write("                                            <li class=\"list-inline-item\"><a href=\"");
      out.print(request.getContextPath());
      out.write("/support/contact/\">Contact us</a></li>\n");
      out.write("                                        </ul>\n");
      out.write("                                    </div>\n");
      out.write("                                    <div class=\"col-auto\">\n");
      out.write("                                        <a href=\"https://github.com/jease/jease\" class=\"btn btn-outline-primary btn-sm\">Source code</a>\n");
      out.write("                                    </div>\n");
      out.write("                                </div>\n");
      out.write("                            </div>\n");
      out.write("                            <div class=\"col-12 col-lg-auto mt-3 mt-lg-0 text-center\">\n");
      out.write("                                Copyright ©2009-");
      out.write("\n");
      out.write("&copy; ");
      out.print( currentYear );
      out.write("<a href=\"http://jease.org/\">jease.org</a>");
      out.write("<br/> Template Design by <a href=\"http://github.com/tabler/tabler\">Tabler template</a> All rights reserved.\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                </footer>\n");
      out.write("            </div>\n");
      out.write("    </body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
