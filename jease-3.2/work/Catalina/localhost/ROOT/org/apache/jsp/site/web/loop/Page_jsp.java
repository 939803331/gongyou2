/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.8
 * Generated at: 2018-06-04 13:44:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.site.web.loop;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.apache.commons.lang3.ArrayUtils;
import org.apache.commons.lang3.StringUtils;
import org.apache.commons.lang3.StringEscapeUtils;
import jease.cms.domain.Content;
import jease.cms.domain.News;
import jease.cms.domain.Topic;
import jease.cms.domain.Folder;
import jease.site.Navigations;

public final class Page_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {


	final static String currentYear = String.format("%tY ", new java.util.Date());

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(7);
    _jspx_dependants.put("/site/service/Prettify.jsp", Long.valueOf(1528116264000L));
    _jspx_dependants.put("/site/service/Rewrite.jsp", Long.valueOf(1528116264000L));
    _jspx_dependants.put("/site/service/Lightbox.jsp", Long.valueOf(1528116264000L));
    _jspx_dependants.put("/site/service/Copyright.jsp", Long.valueOf(1528116264000L));
    _jspx_dependants.put("/site/service/Jquery.jsp", Long.valueOf(1528116264000L));
    _jspx_dependants.put("/site/service/Designswitch.jsp", Long.valueOf(1527964028000L));
    _jspx_dependants.put("/site/service/Feeds.jsp", Long.valueOf(1528116264000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("jease.site.Navigations");
    _jspx_imports_classes.add("jease.cms.domain.Content");
    _jspx_imports_classes.add("jease.cms.domain.News");
    _jspx_imports_classes.add("jease.cms.domain.Topic");
    _jspx_imports_classes.add("org.apache.commons.lang3.ArrayUtils");
    _jspx_imports_classes.add("jease.cms.domain.Folder");
    _jspx_imports_classes.add("org.apache.commons.lang3.StringEscapeUtils");
    _jspx_imports_classes.add("org.apache.commons.lang3.StringUtils");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

 
	Content content = (Content) request.getAttribute("Node"); 
	Content root = (Content) request.getAttribute("Root");

      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n");
      out.write("<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n");
      out.write("<title>");
      out.print(Navigations.getPageTitle(content));
      out.write("</title>\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(request.getContextPath() );
      out.write("/site/web/loop/style/screen.css\" media=\"screen\" />\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.print(request.getContextPath() );
      out.write("/site/web/loop/style/print.css\" media=\"");
      out.print( request.getParameter("print") == null ? "print" : "print,screen" );
      out.write("\" />\n");
      out.write("<link rel=\"alternate\" type=\"application/rss+xml\"  href=\"");
      out.print( request.getContextPath() );
      out.write("/site/service/feeds/rss.jsp\" title=\"RSS Feed\" />\n");
      out.write("<link rel=\"alternate\" type=\"application/atom+xml\" href=\"");
      out.print( request.getContextPath() );
      out.write("/site/service/feeds/atom.jsp\" title=\"ATOM Feed\" />");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print( request.getContextPath() );
      out.write("/site/service/jquery/jquery-min.js\"></script>");
      out.write("<script type=\"text/javascript\">//<![CDATA[\n");
      out.write("$(document).ready(function(){\n");
      out.write("\t$(\"a[href^=\\./\\~]\").each(function() { \n");
      out.write("\t\tthis.href = \"");
      out.print(request.getContextPath());
      out.write("\" + this.href.substring(this.href.indexOf(\"~\") + 1);\n");
      out.write("\t});\n");
      out.write("});\n");
      out.write("//]]></script>");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print( request.getContextPath() );
      out.write("/site/service/lightbox/css/prettyPhoto.css\" type=\"text/css\" media=\"screen\" />\n");
      out.write("<style type=\"text/css\">.currentTextHolder {font-size: 12px;}</style>\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print( request.getContextPath() );
      out.write("/site/service/lightbox/js/jquery.prettyPhoto.js\"></script>\n");
      out.write("<script type=\"text/javascript\">//<![CDATA[\n");
      out.write("$(document).ready(function(){\n");
      out.write("\tvar config = {\n");
      out.write("\t\t\tshow_title: true,\n");
      out.write("\t\t\tdeeplinking: false,\n");
      out.write("\t\t\tdefault_width: 640,\n");
      out.write("\t\t\tdefault_height: 480,\n");
      out.write("\t\t\toverlay_gallery: true, \n");
      out.write("\t\t\thideflash: true,\n");
      out.write("\t\t\tsocial_tools: ''\n");
      out.write("\t};\n");
      out.write("\t$(\"a.Image\").attr({\"rel\" : \"prettyPhoto[image]\"}).prettyPhoto(config);\n");
      out.write("\t$(\"a[href$=.jpg] img,a[href$=.gif] img,a[href$=.png] img\").parent().attr({\"rel\" : \"prettyPhoto[image]\"}).prettyPhoto(config);\n");
      out.write("\t$(\"a[href$=?print]\").attr({\"rel\" : \"prettyPhoto[iframe]\"}).each(function() { this.href += \"&iframe=true\";}).prettyPhoto(config);\n");
      out.write("\t");
 if (request.getParameter("print") != null) { 
      out.write("\n");
      out.write("\t\t$(\"a\").click(function(evt) {\n");
      out.write("\t\t\tif(!this.target) {\n");
      out.write("\t\t\t\twindow.parent.$.prettyPhoto.close();\n");
      out.write("\t\t\t\twindow.parent.location = this.href;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t});\n");
      out.write("\t");
 } 
      out.write("\n");
      out.write("});\n");
      out.write("//]]></script>");
      out.write("<script src=\"https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js\"></script>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("    $(document).ready(function () {\n");
      out.write("        $(\"code,pre\").addClass(\"prettyprint\");\n");
      out.write("    });\n");
      out.write("</script>\n");
      out.write("<script src='https://www.google.com/recaptcha/api.js'></script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<div id=\"out-wrapper\">\n");
      out.write("\t<div id=\"wrapper\">\n");
      out.write("\t\t<div id=\"header\">\n");
      out.write("\t\t\t<h1><a href=\"");
      out.print(request.getContextPath() );
      out.print(root.getPath());
      out.write('"');
      out.write('>');
      out.print(root.getTitle() );
      out.write("</a></h1> \n");
      out.write("\t\t\t<div id=\"tabs\">\n");
      out.write("\t\t\t\t<ul>\n");
      out.write("\t\t\t\t");
 for (Content tab : Navigations.getTabs(root)) { 
      out.write('<');
      out.write('l');
      out.write('i');
      out.print(content.getPath().startsWith(tab.getPath()) ? " class=\"current\"" : "");
      out.write(">\n");
      out.write("\t\t\t\t\t\t<a href=\"");
      out.print(request.getContextPath() );
      out.print(tab.getPath());
      out.write('"');
      out.write('>');
      out.print(tab.getTitle());
      out.write("</a>\n");
      out.write("\t\t\t\t\t</li>\n");
      out.write("\t\t\t\t");
 } 
      out.write("</ul>\n");
      out.write("\t\t\t\t<br class=\"clear\" />\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</div>\n");
      out.write("\t<div id=\"main\">\n");
      out.write("\t\t<div id=\"content\">\n");
      out.write("\t\t\t<p id=\"breadcrumb\">\n");
      out.write("\t\t\t\t");
 for (Content parent : Navigations.getBreadcrumb(root, content)) { 
      out.write("\n");
      out.write("\t\t\t\t\t&raquo; <a href=\"");
      out.print(request.getContextPath() );
      out.print(parent.getPath());
      out.write('"');
      out.write('>');
      out.print(parent.getTitle());
      out.write("</a>\n");
      out.write("\t\t\t\t");
 } 
      out.write("</p>\n");
      out.write("\t\t\t");
 pageContext.include((String) request.getAttribute("Page.Template")); 
      out.write("<div style=\"clear: both\"></div>\n");
      out.write("\t\t\t<p id=\"editorial\">\n");
      out.write("\t\t\t");
 Content latestChange = Navigations.getLatestContribution(content); 
      out.write("\n");
      out.write("\t\t\tLast modified on ");
      out.print(String.format("%tF", latestChange.getLastModified()));
 if (latestChange.getEditor() != null) { 
      out.write("\n");
      out.write("\t\t\t\tby ");
      out.print(latestChange.getEditor().getName());
 }
      out.write("</p>\n");
      out.write("\t\t</div>\n");
      out.write("\t\t<div id=\"navigation\">\t \n");
      out.write("\t\t\t<h2>");
      out.print(((Content) content.getParent()).getTitle());
      out.write("</h2>\n");
      out.write("\t\t\t<ul>\n");
      out.write("\t\t\t");
 for (Content item : Navigations.getItems((Content) content.getParent())) { 
 if (item instanceof Topic) { 
      out.write("</ul><h2>");
      out.print(item.getTitle());
      out.write("</h2><ul>\n");
      out.write("\t\t\t\t");
 } else { 
      out.write('<');
      out.write('l');
      out.write('i');
      out.print(item == content ? " class=\"current\"" : "");
      out.write("><a href=\"");
      out.print(request.getContextPath() );
      out.print(item.getPath());
      out.write('"');
      out.write('>');
      out.print(item.getTitle());
      out.write("</a></li>\n");
      out.write("\t\t\t");
 } 
 } 
      out.write("</ul>\n");
      out.write("\t\t</div>\n");
      out.write("\t<div id=\"news\">\n");
      out.write("\t");

		News[] news = Navigations.getNews((Content) content.getParent());
		if(ArrayUtils.isNotEmpty(news)) {
			for (News item : news) {
	
      out.write("<h2>");
      out.print(item.getTitle());
      out.write("</h2>\n");
      out.write("\t\t\t");
 if (item.getDate() != null) { 
      out.write("<div class=\"date\">");
      out.print(String.format("%tF", item.getDate()));
      out.write("</div>\n");
      out.write("\t\t\t");
} 
 if (StringUtils.isBlank(item.getTeaser())) { 
      out.print(item.getStory());
 } else { 
      out.write('<');
      out.write('p');
      out.write('>');
      out.print(item.getTeaser());
      out.write("<br />\n");
      out.write("\t\t\t\t<a href=\"");
      out.print(request.getContextPath() );
      out.print(item.getPath());
      out.write("?print\">More...</a>\n");
      out.write("\t\t\t\t</p>\n");
      out.write("\t\t\t");
 } 
 } 
 } 
      out.write("<div id=\"search\">\n");
      out.write("\t\t<h2>Search this site</h2>\n");
      out.write("\t\t<form action=\"");
      out.print(request.getContextPath() );
      out.print(root.getPath());
      out.write("\" method=\"get\">\n");
      out.write("\t\t\t<input type=\"text\" name=\"query\" ");
 if(request.getParameter("query") != null) { 
      out.write("value=\"");
      out.print( StringEscapeUtils.escapeHtml4(request.getParameter("query")) );
      out.write('"');
 } else { 
      out.write("value=\"Enter your search...\" onfocus=\"this.value='';\"");
 } 
      out.write(" />\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"page\" value=\"/site/service/Search.jsp\" />\n");
      out.write("\t\t</form>\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("\t<br class=\"clear\" />\n");
      out.write("\t</div>\n");
      out.write("\t<div id=\"footer\">\n");
      out.write("\t<p>\n");
      out.write("\t\t");
      out.write("\n");
      out.write("&copy; ");
      out.print( currentYear );
      out.write("<a href=\"http://jease.org/\">jease.org</a>");
      out.write(" | Design by <a href=\"http://connormckelvey.com\">Connor McKelvey</a>\n");
      out.write("\t\t<br />\n");
      out.write("\t\t");
 if (!jease.Registry.getParameter(jease.Names.JEASE_SITE_DESIGN,"").startsWith("/")) { 
      out.write("<div class=\"btn-list text-center\">\n");
      out.write("Design\n");
 for (String design : new String[] { "bright", "cool", "loop", "photo", "robot", "simple" ,"tabler"}) { 
      out.write("<a class=\"btn btn-secondary btn-sm\" href=\"?design=");
      out.print(design);
      out.write('"');
      out.write('>');
      out.print(design);
      out.write("</a>\n");
 } 
      out.write("</div>\n");
      out.write("\n");
 } 
      out.write("</p>\n");
      out.write("\t</div>\n");
      out.write("\t</div>\n");
      out.write("</div>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
